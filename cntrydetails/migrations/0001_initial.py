# Generated by Django 4.2.20 on 2025-05-05 18:38

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('cca2', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('cca3', models.CharField(max_length=3, unique=True)),
                ('ccn3', models.CharField(blank=True, max_length=3, null=True)),
                ('common_name', models.CharField(max_length=100)),
                ('official_name', models.CharField(max_length=200)),
                ('independent', models.BooleanField(default=False)),
                ('un_member', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('officially-assigned', 'Officially Assigned'), ('user-assigned', 'User Assigned')], max_length=30)),
                ('landlocked', models.BooleanField(default=False)),
                ('area', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('population', models.PositiveBigIntegerField()),
                ('cioc', models.CharField(blank=True, max_length=3, null=True)),
                ('fifa', models.CharField(blank=True, max_length=3, null=True)),
                ('driving_side', models.CharField(choices=[('left', 'Left'), ('right', 'Right')], max_length=5)),
                ('start_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], default='monday', max_length=9)),
                ('google_maps', models.URLField(max_length=500)),
                ('openstreet_maps', models.URLField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('continents', models.ManyToManyField(to='cntrydetails.continent')),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['common_name'],
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('symbol', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('iso_code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subregion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subregions', to='cntrydetails.region')),
            ],
        ),
        migrations.CreateModel(
            name='InternationalDialing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('root', models.CharField(max_length=5)),
                ('suffixes', models.JSONField()),
                ('country', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='idd', to='cntrydetails.country')),
            ],
        ),
        migrations.CreateModel(
            name='CountryPostalCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format', models.CharField(blank=True, max_length=100, null=True)),
                ('regex', models.CharField(blank=True, max_length=200, null=True)),
                ('country', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='postal_code', to='cntrydetails.country')),
            ],
        ),
        migrations.CreateModel(
            name='CountryFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emoji', models.CharField(max_length=15)),
                ('emoji_unicode', models.CharField(max_length=20)),
                ('png', models.URLField(max_length=500)),
                ('svg', models.URLField(max_length=500)),
                ('alt', models.TextField(blank=True)),
                ('country', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='flag', to='cntrydetails.country')),
            ],
        ),
        migrations.CreateModel(
            name='CountryCoatOfArms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('png', models.URLField(max_length=500)),
                ('svg', models.URLField(max_length=500)),
                ('country', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='coat_of_arms', to='cntrydetails.country')),
            ],
        ),
        migrations.AddField(
            model_name='country',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cntrydetails.region'),
        ),
        migrations.AddField(
            model_name='country',
            name='subregion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='countries', to='cntrydetails.subregion'),
        ),
        migrations.CreateModel(
            name='CarSign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign', models.CharField(max_length=10)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_signs', to='cntrydetails.country')),
            ],
        ),
        migrations.CreateModel(
            name='Capital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('country', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='capital', to='cntrydetails.country')),
            ],
        ),
        migrations.CreateModel(
            name='Border',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borders', to='cntrydetails.country')),
                ('neighbor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bordered_by', to='cntrydetails.country')),
            ],
        ),
        migrations.CreateModel(
            name='AlternativeSpelling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spelling', models.CharField(max_length=200)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alt_spellings', to='cntrydetails.country')),
            ],
        ),
        migrations.CreateModel(
            name='TopLevelDomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=10)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tlds', to='cntrydetails.country')),
            ],
            options={
                'verbose_name_plural': 'Top Level Domains',
                'unique_together': {('country', 'domain')},
            },
        ),
        migrations.CreateModel(
            name='Timezone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timezones', to='cntrydetails.country')),
            ],
            options={
                'unique_together': {('country', 'name')},
            },
        ),
        migrations.CreateModel(
            name='GiniIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField()),
                ('value', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gini_indices', to='cntrydetails.country')),
            ],
            options={
                'verbose_name_plural': 'Gini Indices',
                'unique_together': {('country', 'year')},
            },
        ),
        migrations.CreateModel(
            name='Demonym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('male', models.CharField(max_length=50)),
                ('female', models.CharField(max_length=50)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demonyms', to='cntrydetails.country')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cntrydetails.language')),
            ],
            options={
                'verbose_name_plural': 'Demonyms',
                'unique_together': {('country', 'language')},
            },
        ),
        migrations.CreateModel(
            name='CountryName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_type', models.CharField(choices=[('native', 'Native Name'), ('translation', 'Translation')], max_length=11)),
                ('official', models.CharField(max_length=200)),
                ('common', models.CharField(max_length=100)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names', to='cntrydetails.country')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cntrydetails.language')),
            ],
            options={
                'verbose_name_plural': 'Country Names',
                'unique_together': {('country', 'language', 'name_type')},
            },
        ),
        migrations.CreateModel(
            name='CountryLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages', to='cntrydetails.country')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cntrydetails.language')),
            ],
            options={
                'unique_together': {('country', 'language')},
            },
        ),
        migrations.CreateModel(
            name='CountryCurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='currencies', to='cntrydetails.country')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cntrydetails.currency')),
            ],
            options={
                'verbose_name_plural': 'Country Currencies',
                'unique_together': {('country', 'currency')},
            },
        ),
        migrations.AddIndex(
            model_name='country',
            index=models.Index(fields=['common_name'], name='cntrydetail_common__c19b3c_idx'),
        ),
        migrations.AddIndex(
            model_name='country',
            index=models.Index(fields=['official_name'], name='cntrydetail_officia_c18e6f_idx'),
        ),
        migrations.AddIndex(
            model_name='country',
            index=models.Index(fields=['region', 'subregion'], name='cntrydetail_region__826501_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='carsign',
            unique_together={('country', 'sign')},
        ),
        migrations.AlterUniqueTogether(
            name='border',
            unique_together={('country', 'neighbor')},
        ),
        migrations.AlterUniqueTogether(
            name='alternativespelling',
            unique_together={('country', 'spelling')},
        ),
    ]
